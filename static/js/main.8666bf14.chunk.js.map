{"version":3,"sources":["logo.svg","trustbetinfo/Common.js","trustbetinfo/Trustbetinfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Date","prototype","Format","fmt","o","M+","this","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","kylin_net","blockchain","protocol","host","port","chainId","main_net","contract_account","FormItem","es_form","Item","EditableContext","React","createContext","EditableFormRow","create","_ref","form","props","index","Object","objectWithoutProperties","react_default","a","createElement","Provider","value","EditableCell","_React$Component","_getPrototypeOf2","_this","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","editing","toggleEdit","setState","input","focus","handleClickOutside","e","cell","target","contains","save","_this$props","record","handleSave","validateFields","error","values","objectSpread","inherits","createClass","key","editable","document","addEventListener","removeEventListener","_this2","_this$props2","dataIndex","title","restProps","assign","ref","node","Consumer","style","margin","getFieldDecorator","rules","required","message","initialValue","onPressEnter","width","textAlign","paddingRight","onClick","children","Component","Header","Content","Trustbetinfo","updPayJson","undefined","selected","_pid","pid","_day","day","pay_json","indexOf","tmp","splice","accountLoginLogout","scatter","is_login","identity","forgetIdentity","then","login_account","getIdentity","accounts","network","account","find","name","warning","trx_option","authorization","authority","info","getPartners","eosjs","getTableRows","json","code","scope","table","data","rows","partners","getRecords","loading_partners","catch","err","console","parts","next","prevState","_records","records","push","loading_records","addPartner","preventDefault","eos","Eos","contract","addpart","partName","partRate","res","success","updPartner","newp","partner_old","rate","partner","_newr","_newp","_oldr","_oldp","updpart","pay","pay_memo","len","i","join","switchNet","checked","httpEndpoint","resetState","hasErrors","fieldsError","keys","some","field","row","_partners","toConsumableArray","findIndex","item","recordsRowRender","daytime","quantity","columns","align","dataSource","rowSelection","recordsSelection","pagination","loading","today","now","columns_parts","tooltip","placement","icon","type","render","text","href","onSelect","selectedRows","onSelectAll","changeRows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","getCheckboxProps","ret","disabled","_this$props$form","getFieldsError","getFieldError","isFieldTouched","partNameError","partRateError","_data_parts","_columns_parts","map","col","onCell","_components","body","layout","className","position","zIndex","es_switch","checkedChildren","unCheckedChildren","defaultChecked","onChange","onSubmit","Trustbetinfo_FormItem","validateStatus","help","prefix","color","placeholder","es_button","htmlType","components","expandedRowRender","_this3","scatterExtension","window","trustbetinfo_Trustbetinfo","App","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8666bf14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Input, Form } from 'antd';\n\nDate.prototype.Format = function (fmt) {             //author: meizz\n    var o = {\n        \"M+\": this.getMonth() + 1,                   //月份\n        \"d+\": this.getDate(),                        //日\n        \"h+\": this.getHours(),                       //小时\n        \"m+\": this.getMinutes(),                     //分\n        \"s+\": this.getSeconds(),                     //秒\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n        \"S\": this.getMilliseconds()                  //毫秒\n    };\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n}\n\nexport const kylin_net = {\n    blockchain: 'eos',\n    protocol: 'https',\n    host: 'api-kylin.eosasia.one',\n    port: '',\n    chainId: '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'  // kylin net\n};\nexport const main_net = {\n    blockchain: 'eos',\n    protocol: 'https',\n    host: 'nodes.get-scatter.com',\n    port: '443',\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'  // main net\n};\n\nexport const contract_account = 'trustbetinfo';  // 合约账号\n\n// 可编辑单元格\nconst FormItem = Form.Item;\nconst EditableContext = React.createContext();\nconst EditableRow = ({ form, index, ...props }) => (\n    <EditableContext.Provider value={form}>\n      <tr {...props} />\n    </EditableContext.Provider>\n);\nexport const EditableFormRow = Form.create()(EditableRow);\nexport class EditableCell extends React.Component {\n    state = {\n      editing: false,\n    }\n\n    componentDidMount() {\n      if (this.props.editable) {\n        document.addEventListener('click', this.handleClickOutside, true);\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.props.editable) {\n        document.removeEventListener('click', this.handleClickOutside, true);\n      }\n    }\n\n    toggleEdit = () => {\n      const editing = !this.state.editing;\n      this.setState({ editing }, () => {\n        if (editing) {\n          this.input.focus();\n        }\n      });\n    }\n\n    handleClickOutside = (e) => {\n      const { editing } = this.state;\n      if (editing && this.cell !== e.target && !this.cell.contains(e.target)) {\n        this.save();\n      }\n    }\n\n    save = () => {\n      const { record, handleSave } = this.props;\n      this.form.validateFields((error, values) => {\n        if (error) {\n          return;\n        }\n        this.toggleEdit();\n        handleSave({ ...record, ...values });\n      });\n    }\n\n    render() {\n      const { editing } = this.state;\n      const {\n        editable,\n        dataIndex,\n        title,\n        record,\n        index,\n        handleSave,\n        ...restProps\n      } = this.props;\n      return (\n        <td ref={node => (this.cell = node)} {...restProps}>\n          {editable ? (\n            <EditableContext.Consumer>\n              {(form) => {\n                this.form = form;\n                return (\n                  editing ? (\n                    <FormItem style={{ margin: 0 }}>\n                      {form.getFieldDecorator(dataIndex, {\n                        rules: [{\n                          required: true,\n                          message: `${title} is required.`,\n                        }],\n                        initialValue: record[dataIndex],\n                      })(\n                        <Input\n                          ref={node => (this.input = node)}\n                          onPressEnter={this.save}\n                          style={{ width: '60%', textAlign: 'center' }}\n                        />\n                      )}\n                    </FormItem>\n                  ) : (\n                    <div\n                      style={{ paddingRight: 24 }}\n                      onClick={this.toggleEdit}\n                    >\n                      {restProps.children}\n                    </div>\n                  )\n                );\n              }}\n            </EditableContext.Consumer>\n          ) : restProps.children}\n        </td>\n      );\n    }\n}\n","import React, { Component } from 'react';\nimport './Common.css';\n\nimport Eos from 'eosjs';\nimport {\n    Layout, Table, Form, Icon, Input, Button, Message, Tooltip, Switch\n} from 'antd';\nimport {\n    kylin_net, main_net, contract_account, EditableFormRow, EditableCell,\n} from './Common';\n\nconst { Header, Content } = Layout;\nconst FormItem = Form.Item;\n\nclass Trustbetinfo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            is_login: false,\n            login_account: 'Login',\n            partners: [],\n            records: [],\n            loading_partners: true,\n            loading_records: true,\n        }\n\n        this.pay_json = [];\n        this.pay_memo = '';\n        this.trx_option = {};\n        this.partner_old = {};\n        this.network = main_net;\n        this.today = Math.floor( Date.now() / (1000 * 86400) );\n        this.columns_parts = [{\n            title: 'ID',\n            dataIndex: 'pid',\n            key: 'pid',\n            align: 'center',\n        }, {\n            title: (<span>账号 <Tooltip placement='top' title='点击账号可修改'><Icon type='info-circle' /></Tooltip></span>),\n            dataIndex: 'partner',\n            key: 'partner',\n            align: 'center',\n            editable: true,\n        }, {\n            title: (<span>返现率(万分之) <Tooltip placement='top' title='点击返现率可修改'><Icon type='info-circle' /></Tooltip></span>),\n            dataIndex: 'rate',\n            key: 'rate',\n            align: 'center',\n            editable: true,\n        }, {\n            title: (<span>操作 <Tooltip placement='top' title='修改账号或返现率后进行更新'><Icon type='info-circle' /></Tooltip></span>),\n            dataIndex: 'operation',\n            key: 'operation',\n            align: 'center',\n            render: (text, record) => (\n                <a href=\"javascript:;\" onClick={() => {this.updPartner(record)}}>更新</a>\n            ),\n        }];\n\n        this.recordsSelection = {\n            // onChange: ( selectedRowKeys, selectedRows ) => {\n            //     console.log( 'onChange:', `selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows );\n            // },\n            onSelect: ( record, selected, selectedRows ) => {\n                // console.log( 'onSelect=>', 'record: ', record, 'selected: ', selected, 'selectedRows: ', selectedRows );\n                if ( selected && record.day === this.today ) {\n                    Message.warning('不能结算当天的');\n                } else {\n                    this.updPayJson( record, selected );\n                }\n            },\n            onSelectAll: ( selected, selectedRows, changeRows ) => {\n                // console.log( 'onSelectAll:', 'selected: ', selected, 'selectedRows: ', selectedRows, 'changeRows: ', changeRows );\n                let records;\n                if ( selected ) {\n                    records = selectedRows;\n\n                    for ( let i = 0; i < records.length; i++ ) {\n                        if ( records[i].day === this.today ) {\n                            Message.warning('不能结算当天的');\n                            records.splice( i, 1 );  // 删除该条\n                        }\n                    }\n                }\n                else {\n                    records = changeRows;\n                }\n\n                for ( let record of records ) {\n                    this.updPayJson( record, selected );\n                }\n            },\n            getCheckboxProps: ( record ) => {\n                let ret = { disabled: false, };\n                if ( record.day === this.today ) { ret.disabled = true; }  // 当天的记录不可选\n                return ret;\n            },\n        };\n    }\n\n    updPayJson = ( record=null, selected=true ) => {\n        let _pid = record.pid, _day = record.day;\n\n        if ( this.pay_json[_pid] ) {\n            let index = this.pay_json[_pid].indexOf(_day);\n\n            if ( index < 0 ) {\n                if ( selected ) {\n                    let tmp = this.pay_json[_pid];  // concat不会改变原数组\n                    this.pay_json[_pid] = tmp.concat(_day);\n                }\n            } else {\n                if ( !selected ) { this.pay_json[_pid].splice(index, 1); }  // 删除该条\n            }\n        } else if ( selected ) {\n            this.pay_json[_pid] = [_day];\n        }\n\n        // console.log('update => pay_json: ', this.pay_json);\n    }\n\n    accountLoginLogout = () => {\n        if ( !this.scatter ) {\n            Message.info('请先安装或解锁Scatter');\n            return;\n        }\n\n        if ( this.state.is_login && this.scatter && this.scatter.identity ) {\n            // 进入这里是logout动作\n            this.scatter.forgetIdentity().then(() => {\n                this.setState({ is_login: false });\n                this.setState({ login_account: 'Login' });\n            });\n        } else if ( !this.state.is_login && this.scatter && !this.scatter.identity ) {\n            // 进入这里是login动作\n            this.scatter.getIdentity({ accounts: [this.network] }).then(() => {\n                const account = this.scatter.identity.accounts.find(account => account.blockchain === 'eos');\n                if ( account.name !== contract_account ) {\n                    Message.warning('该账号不是管理员账号');\n                }\n\n                this.trx_option = {authorization: [`${account.name}@${account.authority}`]};\n                this.setState({ login_account: account.name });\n                this.setState({ is_login: true });\n            });\n        }\n    }\n\n    getPartners = () => {\n        this.eosjs.getTableRows({\n            json: true,\n            code: contract_account,\n            scope: contract_account,\n            table: 'parts',\n            // limit: 30,\n        })\n        .then(data => {\n            if ( data.rows && data.rows.length > 0 ) {\n                this.setState({ partners: data.rows });\n                this.getRecords( data.rows, 0 );\n            }\n\n            this.setState({ loading_partners: false });\n        })\n        .catch(err => {\n            console.error(err);\n            this.setState({ loading_partners: false });\n        });\n    }\n\n    getRecords = ( parts, next=0 ) => {\n        this.eosjs.getTableRows({\n            json: true,\n            code: contract_account,\n            scope: parts[next].pid,\n            table: 'records',\n            // limit: 30,\n        })\n        .then(data => {\n            if ( next ) {\n                this.setState((prevState) => {\n                    let _records = prevState.records;\n                    _records.push(data.rows);\n                    return {records: _records}\n                });\n            } else {\n                let _records = [];\n                _records.push(data.rows);\n                this.setState({ records: _records });\n            }\n\n            if ( ++next < parts.length ) {\n                this.getRecords( parts, next );\n            } else {\n                this.setState({ loading_records: false });\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            this.setState({ loading_records: false });\n        });\n    }\n\n    addPartner = (e) => {\n        e.preventDefault();\n\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                if ( this.state.is_login && contract_account === this.state.login_account ) {\n                    let eos = this.scatter.eos(this.network, Eos, {});\n                    eos.contract(contract_account)\n                        .then(contract => {\n                            contract.addpart(\n                                values.partName,\n                                values.partRate,\n                                this.trx_option,\n                            )\n                            .then(res => {\n                                this.getPartners();\n                                Message.success('添加成功~');\n                            })\n                            .catch(err => {\n                                Message.error('添加失败!');\n                            });\n                        })\n                        .catch(err => {\n                            console.error(err);\n                        });\n                } else {\n                    Message.error(`请登录${contract_account}账号进行该操作！`);\n                }\n            }\n        });\n    }\n\n    updPartner = (newp) => {\n        if ( !this.state.is_login || contract_account !== this.state.login_account ) {\n            Message.error(`请登录${contract_account}账号进行该操作！`);\n            return;\n        }\n\n        if ( (newp && this.partner_old) &&\n             (newp.pid || newp.pid >= 0) && (newp.rate || newp.rate) >= 0 && newp.partner &&\n             (this.partner_old.pid || this.partner_old.pid >= 0) && (this.partner_old.rate || this.partner_old.rate >= 0) && this.partner_old.partner ) {\n\n            if ( newp.pid === this.partner_old.pid ) {\n                if ( newp.rate !== this.partner_old.rate || newp.partner !== this.partner_old.partner ) {\n                    let _pid = newp.pid;\n                    let _newr = newp.rate, _newp = newp.partner;\n                    let _oldr = this.partner_old.rate, _oldp = this.partner_old.partner;\n\n                    let eos = this.scatter.eos(this.network, Eos, {});\n                    eos.contract(contract_account)\n                        .then(contract => {\n                            contract.updpart(\n                                _pid,\n                                _oldp, _newp,\n                                _oldr, _newr,\n                                this.trx_option,\n                            )\n                            .then(res => {\n                                this.getPartners();\n                                Message.success('更新成功~');\n                            })\n                            .catch(err => {\n                                Message.error('更新失败!');\n                            });\n                        })\n                        .catch(err => {\n                            console.error(err);\n                        });\n                } else {\n                    Message.info('没有需要更新的~');\n                }\n            } else {\n                Message.warning('请点击刚才修改那一行的更新！');\n            }\n        } else {\n            Message.warning('请先修改账号或返现率！');\n        }\n    }\n\n    pay = () => {\n        if ( !this.state.is_login || contract_account !== this.state.login_account ) {\n            Message.error(`请登录${contract_account}账号进行该操作！`);\n            return;\n        }\n\n        // console.log('pay_json: ', this.pay_json);\n        this.pay_memo = '';\n        let len = this.pay_json.length;\n\n        for ( let i = 0; i < len; i++ ) {\n            // console.log(`this.pay_json[${i}]: `, this.pay_json[i]);\n            if ( this.pay_json[i] && this.pay_json[i].length > 0 ) {\n                if ( this.pay_memo.length > 0 ) { this.pay_memo += ';'; }\n\n                this.pay_memo = this.pay_memo + i + ':' + this.pay_json[i].join(':');\n            }\n            // console.log(`${i} => pay_memo: `, this.pay_memo);\n        }\n        // console.log('pay_memo: ', this.pay_memo);\n\n        if ( this.pay_memo.length > 0 ) {\n            let eos = this.scatter.eos(this.network, Eos, {});\n            eos.contract(contract_account)\n                .then(contract => {\n                    contract.pay(\n                        this.pay_memo,\n                        this.trx_option,\n                    )\n                    .then(res => {\n                        this.pay_json = [];\n                        this.pay_memo = '';\n                        this.getPartners();\n                        Message.success('结算成功~');\n                    })\n                    .catch(err => {\n                        Message.error('结算失败！');\n                    });\n                })\n                .catch(err => {\n                    console.error(err);\n                });\n        } else {\n            Message.warning('请勾选要结算的项!');\n        }\n    }\n\n    switchNet = ( checked ) => {\n        if ( checked ) {\n            this.network = main_net;\n        } else {\n            this.network = kylin_net;\n        }\n\n        this.eosjs = Eos({\n            httpEndpoint: `${this.network.protocol}://${this.network.host}:${this.network.port}`,\n            chainId: this.network.chainId,\n        });\n\n        this.resetState();\n        this.getPartners();\n\n        if (this.scatter && this.scatter.identity) {\n            const account = this.scatter.identity.accounts.find(account => account.blockchain === 'eos');\n            if ( account.name !== contract_account ) {\n                Message.warning('该账号不是管理员账号');\n            }\n\n            this.trx_option = {authorization: [`${account.name}@${account.authority}`]};\n            this.setState({ login_account: account.name });\n            this.setState({ is_login: true });\n        }\n    }\n\n    resetState = () => {\n        this.pay_json = [];\n        this.pay_memo = '';\n        this.trx_option = {};\n        this.partner_old = {};\n\n        this.setState({\n            is_login: false,\n            login_account: 'Login',\n            partners: [],\n            records: [],\n            loading_partners: true,\n            loading_records: true,\n        });\n    }\n\n    hasErrors = (fieldsError) => {\n        return Object.keys(fieldsError).some(field => fieldsError[field]);\n    }\n\n    // 保存代理的更改\n    handleSave = (row) => {\n        delete row.key;\n\n        let _partners = [...this.state.partners];\n        let index = _partners.findIndex(item => row.pid === item.pid);\n        let item = _partners[index];\n\n        if ( this.partner_old.pid || this.partner_old.pid >= 0 ) {\n            if ( this.partner_old.pid !== item.pid ) {\n                this.partner_old = item;\n            }\n        } else {\n            this.partner_old = item;\n        }\n\n        _partners.splice(index, 1, {\n            ...item,\n            ...row,\n        });\n        this.setState({ partners: _partners });\n    }\n\n    recordsRowRender = ( record ) => {\n        const columns = [{\n            title: '日期',\n            dataIndex: 'daytime',\n            key: 'daytime',\n            align: 'center',\n        }, {\n            title: '金额(EOS)',\n            dataIndex: 'quantity',\n            key: 'quantity',\n            align: 'center',\n        }];\n    \n        let data = [];\n        let pid = record.pid, records = this.state.records[pid];\n        for ( let i = 0; records && i < records.length; i++ ) {\n            data.push({\n                key: i,\n                pid: pid,\n                day: records[i].day,\n                daytime: new Date( records[i].day * 86400 * 1000 ).Format('yyyy/MM/dd'),\n                quantity: records[i].quantity,\n            });\n        }\n    \n        return (\n            <Table\n                columns={columns}\n                dataSource={data}\n                rowSelection={this.recordsSelection}\n                pagination={false}\n                loading={this.state.loading_records}\n            />\n        );\n    };\n\n    render() {\n        const {\n            getFieldDecorator, getFieldsError, getFieldError, isFieldTouched,\n        } = this.props.form;\n        const partNameError = isFieldTouched('partName') && getFieldError('partName');\n        const partRateError = isFieldTouched('partRate') && getFieldError('partRate');\n\n        const _data_parts = [];\n        const _partners = this.state.partners;\n        for ( let i = 0; i < _partners.length; i++ ) {\n            _data_parts.push({\n                key: i,\n                pid: _partners[i].pid,\n                partner: _partners[i].partner,\n                rate: _partners[i].rate,\n            });\n        }\n        const _columns_parts = this.columns_parts.map((col) => {\n            if (!col.editable) {\n                return col;\n            }\n\n            return {\n                ...col,\n                onCell: record => ({\n                    record,\n                    editable: col.editable,\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    handleSave: this.handleSave,\n                }),\n            }\n        });\n        const _components = {\n            body: {\n              row: EditableFormRow,\n              cell: EditableCell,\n            },\n        };\n\n        return (\n            <div>\n                <Layout className='layout'>\n                    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                        <div className='header-box'>\n                            <Switch className='main-kylin' checkedChildren=\"主网\" unCheckedChildren=\"麒麟\" defaultChecked onChange={this.switchNet} />\n                            <a href='javascript:;' onClick={this.pay} className='pay'>\n                                {<span><Icon type='pay-circle'/> 结算</span>}\n                            </a>\n                            <a href='javascript:;' onClick={this.accountLoginLogout} className='login-logout'>\n                                {\n                                    this.state.is_login === true ?\n                                    <span><Icon type='user'/> {this.state.login_account}</span> :\n                                    <span><Icon type='login'/> {this.state.login_account}</span>\n                                }\n                            </a>\n                        </div>\n                    </Header>\n                    <Content>\n                        <div className='add-partner'>\n                            <Form layout=\"inline\" onSubmit={this.addPartner}>\n                                <FormItem\n                                    validateStatus={partNameError ? 'error' : ''}\n                                    help={partNameError || ''}\n                                >\n                                    {getFieldDecorator('partName', {\n                                        rules: [{ required: true, message: 'Please input a partner name!' }],\n                                    })(\n                                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"text\" placeholder=\"账号\" />\n                                    )}\n                                </FormItem>\n                                <FormItem\n                                    validateStatus={partRateError ? 'error' : ''}\n                                    help={partRateError || ''}\n                                >\n                                    {getFieldDecorator('partRate', {\n                                        rules: [{ required: true, message: 'Please input a return rate!' }],\n                                    })(\n                                        <Input prefix={<Icon type=\"calculator\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"number\" placeholder=\"返现率\" />\n                                    )}\n                                </FormItem>\n                                <FormItem>\n                                        <Button\n                                            type=\"primary\"\n                                            htmlType=\"submit\"\n                                            disabled={this.hasErrors(getFieldsError())}\n                                        >添加代理</Button>\n                                </FormItem>\n                            </Form>\n                        </div>\n                        <Table\n                            components={_components}\n                            columns={_columns_parts}\n                            dataSource={_data_parts}\n                            expandedRowRender={this.recordsRowRender}\n                            pagination={false}\n                            loading={this.state.loading_partners}\n                            style={{ width: '720px', margin: '30px auto' }}\n                        />\n                    </Content>\n                </Layout>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.props.form.validateFields();\n\n        this.eosjs = Eos({\n            httpEndpoint: `${this.network.protocol}://${this.network.host}:${this.network.port}`,\n            chainId: this.network.chainId,\n        });\n\n        document.addEventListener('scatterLoaded', scatterExtension => {\n            this.scatter = window.scatter;\n            window.scatter = null;\n        });\n\n        this.getPartners();\n    }\n}\n\nexport default Form.create()(Trustbetinfo);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Trustbetinfo from './trustbetinfo/Trustbetinfo';\n\nconst isTrustbetinfo = true;\n\nclass App extends Component {\n  render() {\n    if ( isTrustbetinfo ) {\n      return (\n        <Trustbetinfo />\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}