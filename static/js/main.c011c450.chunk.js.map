{"version":3,"sources":["logo.svg","trustbetinfo/EditableCell.js","trustbetinfo/Trustbetinfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FormItem","es_form","Item","EditableContext","React","createContext","EditableFormRow","create","_ref","form","props","index","Object","objectWithoutProperties","react_default","a","createElement","Provider","value","EditableCell","state","editing","toggleEdit","_this","setState","input","focus","handleClickOutside","e","cell","target","contains","save","_this$props","record","handleSave","validateFields","error","values","objectSpread","this","editable","document","addEventListener","removeEventListener","_this2","_this$props2","dataIndex","title","restProps","assign","ref","node","Consumer","style","margin","getFieldDecorator","rules","required","message","concat","initialValue","onPressEnter","className","paddingRight","onClick","children","Component","Header","Content","network","blockchain","protocol","host","port","chainId","contract_account","columns_parts","key","align","recordsSelection","onChange","selectedRowKeys","selectedRows","console","log","Trustbetinfo","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasErrors","fieldsError","keys","some","field","handleSubmit","preventDefault","err","is_login","login_account","scatter","eos","Eos","contract","then","addpart","partName","partRate","trx_option","res","getPartners","success","catch","pay","info","eosjs","getTableRows","json","code","scope","table","data","rows","length","partners","getRecords","parts","next","arguments","undefined","partner","prevState","_records","records","push","accountLoginLogout","identity","forgetIdentity","getIdentity","accounts","account","find","name","warning","authorization","authority","bind","assertThisInitialized","data_parts","i","pid","rate","operation","_this$props$form","getFieldsError","getFieldError","isFieldTouched","partNameError","partRateError","layout","href","icon","type","onSubmit","Trustbetinfo_FormItem","validateStatus","help","prefix","color","placeholder","es_button","htmlType","disabled","columns","dataSource","expandedRowRender","daytime","day","quantity","rowSelection","pagination","width","_this3","httpEndpoint","scatterExtension","window","trustbetinfo_Trustbetinfo","App","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c011c450.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './Common.css';\n\nimport {\n    Table, Input, Button, Popconfirm, Form,\n} from 'antd';\n\nconst FormItem = Form.Item;\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n    <EditableContext.Provider value={form}>\n      <tr {...props} />\n    </EditableContext.Provider>\n);\n  \nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n    state = {\n      editing: false,\n    }\n  \n    componentDidMount() {\n      if (this.props.editable) {\n        document.addEventListener('click', this.handleClickOutside, true);\n      }\n    }\n  \n    componentWillUnmount() {\n      if (this.props.editable) {\n        document.removeEventListener('click', this.handleClickOutside, true);\n      }\n    }\n  \n    toggleEdit = () => {\n      const editing = !this.state.editing;\n      this.setState({ editing }, () => {\n        if (editing) {\n          this.input.focus();\n        }\n      });\n    }\n  \n    handleClickOutside = (e) => {\n      const { editing } = this.state;\n      if (editing && this.cell !== e.target && !this.cell.contains(e.target)) {\n        this.save();\n      }\n    }\n  \n    save = () => {\n      const { record, handleSave } = this.props;\n      this.form.validateFields((error, values) => {\n        if (error) {\n          return;\n        }\n        this.toggleEdit();\n        handleSave({ ...record, ...values });\n      });\n    }\n  \n    render() {\n      const { editing } = this.state;\n      const {\n        editable,\n        dataIndex,\n        title,\n        record,\n        index,\n        handleSave,\n        ...restProps\n      } = this.props;\n      return (\n        <td ref={node => (this.cell = node)} {...restProps}>\n          {editable ? (\n            <EditableContext.Consumer>\n              {(form) => {\n                this.form = form;\n                return (\n                  editing ? (\n                    <FormItem style={{ margin: 0 }}>\n                      {form.getFieldDecorator(dataIndex, {\n                        rules: [{\n                          required: true,\n                          message: `${title} is required.`,\n                        }],\n                        initialValue: record[dataIndex],\n                      })(\n                        <Input\n                          ref={node => (this.input = node)}\n                          onPressEnter={this.save}\n                        />\n                      )}\n                    </FormItem>\n                  ) : (\n                    <div\n                      className=\"editable-cell-value-wrap\"\n                      style={{ paddingRight: 24 }}\n                      onClick={this.toggleEdit}\n                    >\n                      {restProps.children}\n                    </div>\n                  )\n                );\n              }}\n            </EditableContext.Consumer>\n          ) : restProps.children}\n        </td>\n      );\n    }\n}\n\nclass EditableTable extends React.Component {\n    constructor(props) {\n      super(props);\n      this.columns = [{\n        title: 'name',\n        dataIndex: 'name',\n        width: '30%',\n        editable: true,\n      }, {\n        title: 'age',\n        dataIndex: 'age',\n      }, {\n        title: 'address',\n        dataIndex: 'address',\n      }, {\n        title: 'operation',\n        dataIndex: 'operation',\n        render: (text, record) => (\n          this.state.dataSource.length >= 1\n            ? (\n              <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\n                <a href=\"javascript:;\">Delete</a>\n              </Popconfirm>\n            ) : null\n        ),\n      }];\n  \n      this.state = {\n        dataSource: [{\n          key: '0',\n          name: 'Edward King 0',\n          age: '32',\n          address: 'London, Park Lane no. 0',\n        }, {\n          key: '1',\n          name: 'Edward King 1',\n          age: '32',\n          address: 'London, Park Lane no. 1',\n        }],\n        count: 2,\n      };\n    }\n  \n    handleDelete = (key) => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n    }\n  \n    handleAdd = () => {\n      const { count, dataSource } = this.state;\n      const newData = {\n        key: count,\n        name: `Edward King ${count}`,\n        age: 32,\n        address: `London, Park Lane no. ${count}`,\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1,\n      });\n    }\n  \n    handleSave = (row) => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, {\n        ...item,\n        ...row,\n      });\n      this.setState({ dataSource: newData });\n    }\n  \n    render() {\n      const { dataSource } = this.state;\n      const components = {\n        body: {\n          row: EditableFormRow,\n          cell: EditableCell,\n        },\n      };\n      const columns = this.columns.map((col) => {\n        if (!col.editable) {\n          return col;\n        }\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave: this.handleSave,\n          }),\n        };\n      });\n      return (\n        <div>\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n            Add a row\n          </Button>\n          <Table\n            components={components}\n            rowClassName={() => 'editable-row'}\n            bordered\n            dataSource={dataSource}\n            columns={columns}\n          />\n        </div>\n      );\n    }\n  }\n  \n  export default EditableTable;\n  \n","import React, { Component } from 'react';\nimport './Common.css';\n\nimport Eos from 'eosjs';\nimport {\n    Layout, Table, Form, Icon, Input, Button, Message\n} from 'antd';\nimport EditableTable from './EditableCell';\n\nconst FormItem = Form.Item;\nconst { Header, Content } = Layout;\n\n// // kylin net\n// const network = {\n//     blockchain: 'eos',\n//     protocol: 'https',\n//     host: 'api-kylin.eosasia.one',  // filter-on = *\n//     port: '',\n//     chainId: '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'  // kylin net\n// }\n// main net\nconst network = {\n    blockchain: 'eos',\n    protocol: 'https',\n    host: 'nodes.get-scatter.com',\n    port: '443',\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'  // main net\n}\nconst contract_account = 'trustbetinfo';  // 合约账号\n\nconst columns_parts = [{\n    title: 'ID',\n    dataIndex: 'pid',\n    key: 'pid',\n    align: 'center',\n}, {\n    title: '账号',\n    dataIndex: 'account',\n    key: 'account',\n    align: 'center',\n}, {\n    title: '返现率(万分之)',\n    dataIndex: 'rate',\n    key: 'rate',\n    align: 'center',\n}, {\n    title: '操作',\n    dataIndex: 'operation',\n    key: 'operation',\n    align: 'center',\n}];\n\nconst recordsSelection = {\n    onChange: ( selectedRowKeys, selectedRows ) => {\n        console.log( 'onChange:', `selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows );\n    },\n    // onSelect: ( record, selected, selectedRows ) => {\n    //     console.log( 'onSelect:', record, selected, selectedRows );\n    // },\n    // onSelectAll: ( selected, selectedRows, changeRows ) => {\n    //     console.log( 'onSelectAll:', selected, selectedRows, changeRows );\n    // },\n};\n\nclass Trustbetinfo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            is_login: false,\n            login_account: 'Login',\n            partners: [],\n            records: [],\n        }\n\n        // not ui state\n        this.trx_option = null;\n\n        // form\n        this.hasErrors = this.hasErrors.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.pay = this.pay.bind(this);\n        this.accountLoginLogout = this.accountLoginLogout.bind(this);\n\n        this.getPartners = this.getPartners.bind(this);\n        this.getRecords  = this.getRecords.bind(this);\n    }\n\n    hasErrors = (fieldsError) => {\n        return Object.keys(fieldsError).some(field => fieldsError[field]);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                if ( this.state.is_login && contract_account === this.state.login_account ) {\n                    let eos = this.scatter.eos(network, Eos, {});\n                    eos.contract(contract_account)\n                        .then(contract => {\n                            contract.addpart(\n                                values.partName,\n                                values.partRate,\n                                this.trx_option,\n                            )\n                            .then(res => {\n                                this.getPartners();\n                                Message.success('添加成功~');\n                            })\n                        })\n                        .catch(err => {\n                            console.error(err);\n                        });\n                } else {\n                    Message.error(`请登录${contract_account}账号进行该操作！`);\n                }\n            }\n        });\n    }\n\n    pay = () => {\n        Message.info('发起结算');\n    }\n\n    getPartners = () => {\n        this.eosjs.getTableRows({\n            json: true,\n            code: contract_account,\n            scope: contract_account,\n            table: 'parts',\n            // limit: 30,\n        })\n        .then(data => {\n            if ( data.rows && data.rows.length > 0 ) {\n                this.setState({ partners: data.rows });\n                this.getRecords( data.rows, 0 );\n            }\n        })\n        .catch(err => {\n            console.error(err);\n        });\n    }\n\n    getRecords = ( parts, next=0 ) => {\n        this.eosjs.getTableRows({\n            json: true,\n            code: contract_account,\n            scope: parts[next++].partner,\n            table: 'records',\n            // limit: 30,\n        })\n        .then(data => {\n            this.setState((prevState) => {\n                let _records = prevState.records;\n                _records.push(data.rows);\n                return {records: _records}\n            });\n\n            if ( next < parts.length ) {\n                this.getRecords( parts, next );\n            } else {\n                // console.log('end');\n            }\n        })\n        .catch(err => {\n            console.error(err);\n        });\n    }\n\n    accountLoginLogout = () => {\n        if ( null === this.scatter ) {\n            Message.info('请先安装或解锁Scatter');\n            return;\n        }\n\n        if ( this.state.is_login && this.scatter && this.scatter.identity ) {\n            // 进入这里是logout动作\n            this.scatter.forgetIdentity().then(() => {\n                this.setState({ is_login: false });\n                this.setState({ login_account: 'Login' });\n            });\n        } else if ( !this.state.is_login && this.scatter && !this.scatter.identity ) {\n            // 进入这里是login动作\n            this.scatter.getIdentity({ accounts: [network] }).then(() => {\n                const account = this.scatter.identity.accounts.find(account => account.blockchain === 'eos');\n                if ( account.name !== contract_account ) {\n                    Message.warning('该账号不是管理员账号');\n                }\n\n                this.trx_option = {authorization: [`${account.name}@${account.authority}`]};\n                this.setState({ login_account: account.name });\n                this.setState({ is_login: true });\n            });\n        }\n    }\n\n    render() {\n        let data_parts = [];\n        let partners = this.state.partners;\n\n        for ( let i = 0; i < partners.length; i++ ) {\n            data_parts.push({\n                key: i,\n                pid: partners[i].pid,\n                account: partners[i].partner,\n                rate: partners[i].rate,\n                operation: '更新',\n            });\n        }\n\n        const recordsRowRender = ( record ) => {\n            const columns = [{\n                title: '日期',\n                dataIndex: 'daytime',\n                key: 'daytime',\n                align: 'center',\n            }, {\n                title: '金额(EOS)',\n                dataIndex: 'quantity',\n                key: 'quantity',\n                align: 'center',\n            }];\n        \n            let data = [];\n            let pid = record.pid, records = this.state.records[pid];\n            for ( let i = 0; records && i < records.length; i++ ) {\n                data.push({\n                    key: i,\n                    daytime: records[i].day,\n                    quantity: records[i].quantity,\n                });\n            }\n        \n            return (\n                <Table\n                    columns={columns}\n                    dataSource={data}\n                    rowSelection={recordsSelection}\n                    pagination={false}\n                />\n            );\n        };\n\n        const {\n            getFieldDecorator, getFieldsError, getFieldError, isFieldTouched,\n        } = this.props.form;\n\n        const partNameError = isFieldTouched('partName') && getFieldError('partName');\n        const partRateError = isFieldTouched('partRate') && getFieldError('partRate');\n\n        return (\n            <div>\n                <Layout className='layout'>\n                    <Header>\n                        <a href='#' onClick={this.accountLoginLogout} className='login-logout'>\n                            {\n                                this.state.is_login === true ?\n                                <span><Icon type='user'/> {this.state.login_account}</span> :\n                                <span><Icon type='login'/> {this.state.login_account}</span>\n                            }\n                        </a>\n                        <a href='#' onClick={this.pay} className='login-logout'>\n                            {<span><Icon type='user'/> 结算</span>}\n                        </a>\n                    </Header>\n                    <Content>\n                        <div className='add-partner'>\n                            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                                <FormItem\n                                    validateStatus={partNameError ? 'error' : ''}\n                                    help={partNameError || ''}\n                                >\n                                    {getFieldDecorator('partName', {\n                                        rules: [{ required: true, message: 'Please input a partner name!' }],\n                                    })(\n                                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"text\" placeholder=\"账号\" />\n                                    )}\n                                </FormItem>\n                                <FormItem\n                                    validateStatus={partRateError ? 'error' : ''}\n                                    help={partRateError || ''}\n                                >\n                                    {getFieldDecorator('partRate', {\n                                        rules: [{ required: true, message: 'Please input a return rate!' }],\n                                    })(\n                                        <Input prefix={<Icon type=\"calculator\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"number\" placeholder=\"返现率\" />\n                                    )}\n                                </FormItem>\n                                <FormItem>\n                                        <Button\n                                            type=\"primary\"\n                                            htmlType=\"submit\"\n                                            disabled={this.hasErrors(getFieldsError())}\n                                        >添加代理</Button>\n                                </FormItem>\n                            </Form>\n                        </div>\n                        <Table\n                            columns={columns_parts}\n                            dataSource={data_parts}\n                            expandedRowRender={recordsRowRender}\n                            pagination={false}\n                            style={{ width: '720px', margin: '30px auto' }}\n                        />\n                        {/* <EditableTable /> */}\n                    </Content>\n                </Layout>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.props.form.validateFields();\n\n        this.eosjs = Eos({\n            httpEndpoint: `${network.protocol}://${network.host}:${network.port}`,\n            chainId: network.chainId,\n        });\n\n        document.addEventListener('scatterLoaded', scatterExtension => {\n            this.scatter = window.scatter;\n            window.scatter = null;\n\n            if (this.scatter && this.scatter.identity) {\n                const account = this.scatter.identity.accounts.find(account => account.blockchain === 'eos');\n                if ( account.name !== contract_account ) {\n                    Message.warning('该账号不是管理员账号');\n                }\n\n                this.trx_option = {authorization: [`${account.name}@${account.authority}`]};\n                this.setState({ login_account: account.name });\n                this.setState({ is_login: true });\n            }\n        });\n\n        this.getPartners();\n    }\n}\n\nexport default Form.create()(Trustbetinfo);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Trustbetinfo from './trustbetinfo/Trustbetinfo';\n\nconst isTrustbetinfo = true;\n\nclass App extends Component {\n  render() {\n    if ( isTrustbetinfo ) {\n      return (\n        <Trustbetinfo />\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}