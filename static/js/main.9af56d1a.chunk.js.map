{"version":3,"sources":["logo.svg","trustbetinfo/Trustbetinfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","Content","FormItem","es_form","Item","EditableContext","React","createContext","EditableFormRow","create","_ref","form","props","index","Object","objectWithoutProperties","react_default","a","createElement","Provider","value","kylin_net","blockchain","protocol","host","port","chainId","main_net","contract_account","Date","prototype","Format","fmt","o","M+","this","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","EditableCell","state","editing","toggleEdit","_this","setState","input","focus","handleClickOutside","e","cell","target","contains","save","_this$props","record","handleSave","validateFields","error","values","objectSpread","editable","document","addEventListener","removeEventListener","_this2","_this$props2","dataIndex","title","restProps","assign","ref","node","Consumer","style","margin","getFieldDecorator","rules","required","message","concat","initialValue","onPressEnter","width","textAlign","className","paddingRight","onClick","children","Component","Trustbetinfo","_this3","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","resetState","pay_json","pay_memo","trx_option","partner_old","is_login","login_account","partners","records","loading_partners","loading_records","updPayJson","arguments","undefined","selected","_pid","pid","_day","day","indexOf","tmp","splice","console","log","hasErrors","fieldsError","keys","some","field","addPartner","preventDefault","err","scatter","eos","network","Eos","contract","then","addpart","partName","partRate","res","getPartners","success","catch","updPartner","newp","rate","partner","_newr","_newp","_oldr","_oldp","updpart","info","warning","pay","len","i","join","eosjs","getTableRows","json","code","scope","table","data","rows","getRecords","parts","next","prevState","_records","push","accountLoginLogout","identity","forgetIdentity","getIdentity","accounts","account","find","name","authorization","authority","switchNet","checked","httpEndpoint","row","key","_partners","toConsumableArray","findIndex","item","init","scatterExtension","window","today","now","columns_parts","align","tooltip","placement","icon","type","render","text","href","recordsSelection","onSelect","selectedRows","onSelectAll","changeRows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","getCheckboxProps","ret","disabled","_this4","data_parts","_this$props$form","getFieldsError","getFieldError","isFieldTouched","partNameError","partRateError","components","body","_columns_parts","map","col","onCell","layout","position","zIndex","es_switch","checkedChildren","unCheckedChildren","defaultChecked","onChange","onSubmit","validateStatus","help","prefix","color","placeholder","es_button","htmlType","columns","dataSource","expandedRowRender","daytime","quantity","rowSelection","pagination","loading","trustbetinfo_Trustbetinfo","App","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9af56d1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './Common.css';\n\nimport Eos from 'eosjs';\nimport {\n    Layout, Table, Form, Icon, Input, Button, Message, Tooltip, Switch\n} from 'antd';\n\nconst { Header, Content } = Layout;\nconst FormItem = Form.Item;\nconst EditableContext = React.createContext();\nconst EditableRow = ({ form, index, ...props }) => (\n    <EditableContext.Provider value={form}>\n      <tr {...props} />\n    </EditableContext.Provider>\n);\nconst EditableFormRow = Form.create()(EditableRow);\n\n// // kylin net\nconst kylin_net = {\n    blockchain: 'eos',\n    protocol: 'https',\n    host: 'api-kylin.eosasia.one',  // filter-on = *\n    port: '',\n    chainId: '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'  // kylin net\n}\n// main net\nconst main_net = {\n    blockchain: 'eos',\n    protocol: 'https',\n    host: 'nodes.get-scatter.com',\n    port: '443',\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'  // main net\n}\nconst contract_account = 'trustbetinfo';  // 合约账号\n\nDate.prototype.Format = function (fmt) { //author: meizz\n    var o = {\n        \"M+\": this.getMonth() + 1, //月份\n        \"d+\": this.getDate(), //日\n        \"h+\": this.getHours(), //小时\n        \"m+\": this.getMinutes(), //分\n        \"s+\": this.getSeconds(), //秒\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n        \"S\": this.getMilliseconds() //毫秒\n    };\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n}\n\nclass EditableCell extends React.Component {\n    state = {\n      editing: false,\n    }\n\n    componentDidMount() {\n      if (this.props.editable) {\n        document.addEventListener('click', this.handleClickOutside, true);\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.props.editable) {\n        document.removeEventListener('click', this.handleClickOutside, true);\n      }\n    }\n\n    toggleEdit = () => {\n      const editing = !this.state.editing;\n      this.setState({ editing }, () => {\n        if (editing) {\n          this.input.focus();\n        }\n      });\n    }\n\n    handleClickOutside = (e) => {\n      const { editing } = this.state;\n      if (editing && this.cell !== e.target && !this.cell.contains(e.target)) {\n        this.save();\n      }\n    }\n\n    save = () => {\n      const { record, handleSave } = this.props;\n      this.form.validateFields((error, values) => {\n        if (error) {\n          return;\n        }\n        this.toggleEdit();\n        handleSave({ ...record, ...values });\n      });\n    }\n\n    render() {\n      const { editing } = this.state;\n      const {\n        editable,\n        dataIndex,\n        title,\n        record,\n        index,\n        handleSave,\n        ...restProps\n      } = this.props;\n      return (\n        <td ref={node => (this.cell = node)} {...restProps}>\n          {editable ? (\n            <EditableContext.Consumer>\n              {(form) => {\n                this.form = form;\n                return (\n                  editing ? (\n                    <FormItem style={{ margin: 0 }}>\n                      {form.getFieldDecorator(dataIndex, {\n                        rules: [{\n                          required: true,\n                          message: `${title} is required.`,\n                        }],\n                        initialValue: record[dataIndex],\n                      })(\n                        <Input\n                          ref={node => (this.input = node)}\n                          onPressEnter={this.save}\n                          style={{ width: '60%', textAlign: 'center' }}\n                        />\n                      )}\n                    </FormItem>\n                  ) : (\n                    <div\n                      className=\"editable-cell-value-wrap\"\n                      style={{ paddingRight: 24 }}\n                      onClick={this.toggleEdit}\n                    >\n                      {restProps.children}\n                    </div>\n                  )\n                );\n              }}\n            </EditableContext.Consumer>\n          ) : restProps.children}\n        </td>\n      );\n    }\n}\n\n\nclass Trustbetinfo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            is_login: false,\n            login_account: 'Login',\n            partners: [],\n            records: [],\n            loading_partners: true,\n            loading_records: true,\n        }\n\n        // not ui state\n        this.pay_json = [];\n        this.pay_memo = '';\n        this.trx_option = null;\n        this.partner_old = {};\n        this.network = main_net;\n        this.today = Math.floor( Date.now() / 1000 / 86400 );\n        this.columns_parts = [{\n            title: 'ID',\n            dataIndex: 'pid',\n            key: 'pid',\n            align: 'center',\n        }, {\n            title: (<span>账号 <Tooltip placement='top' title='点击账号可修改'><Icon type='info-circle' /></Tooltip></span>),\n            dataIndex: 'partner',\n            key: 'partner',\n            align: 'center',\n            editable: true,\n        }, {\n            title: (<span>返现率(万分之) <Tooltip placement='top' title='点击返现率可修改'><Icon type='info-circle' /></Tooltip></span>),\n            dataIndex: 'rate',\n            key: 'rate',\n            align: 'center',\n            editable: true,\n        }, {\n            title: (<span>操作 <Tooltip placement='top' title='修改账号或返现率后进行更新'><Icon type='info-circle' /></Tooltip></span>),\n            dataIndex: 'operation',\n            key: 'operation',\n            align: 'center',\n            render: (text, record) => (\n                <a href=\"javascript:;\" onClick={() => {this.updPartner(record)}}>更新</a>\n            ),\n        }];\n\n        this.recordsSelection = {\n            // onChange: ( selectedRowKeys, selectedRows ) => {\n            //     console.log( 'onChange:', `selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows );\n            // },\n            onSelect: ( record, selected, selectedRows ) => {\n                // console.log( 'onSelect=>', 'record: ', record, 'selected: ', selected, 'selectedRows: ', selectedRows );\n                if ( selected && record.day === this.today ) {\n                    Message.warning('不能结算当天的');\n                } else {\n                    this.updPayJson( record, selected );\n                }\n            },\n            onSelectAll: ( selected, selectedRows, changeRows ) => {\n                // console.log( 'onSelectAll:', 'selected: ', selected, 'selectedRows: ', selectedRows, 'changeRows: ', changeRows );\n                let records;\n                if ( selected ) {\n                    records = selectedRows;\n\n                    for ( let i = 0; i < records.length; i++ ) {\n                        if ( records[i].day === this.today ) {\n                            Message.warning('不能结算当天的');\n                            records.splice( i, 1 );\n                        }\n                    }\n                }\n                else {\n                    records = changeRows;\n                }\n\n                for ( let record of records ) {\n                    this.updPayJson( record, selected );\n                }\n            },\n            getCheckboxProps: ( record ) => {\n                let ret = { disabled: false, };\n                if ( record.day === this.today ) { ret.disabled = true; }\n                return ret;\n            },\n        };\n    }\n\n    resetState = () => {\n        this.pay_json = [];\n        this.pay_memo = '';\n        this.trx_option = null;\n        this.partner_old = {};\n\n        this.setState({\n            is_login: false,\n            login_account: 'Login',\n            partners: [],\n            records: [],\n            loading_partners: true,\n            loading_records: true,\n        });\n    }\n\n    updPayJson = ( record=null, selected=true ) => {\n        let _pid = record.pid, _day = record.day;\n\n        if ( this.pay_json[_pid] ) {\n            let index = this.pay_json[_pid].indexOf(_day);\n\n            if ( index < 0 ) {\n                if ( selected ) {\n                    let tmp = this.pay_json[_pid];\n                    this.pay_json[_pid] = tmp.concat(_day);\n                }\n            } else {\n                if ( !selected ) { this.pay_json[_pid].splice(index, 1); }\n            }\n        } else if ( selected ) {\n            this.pay_json[_pid] = [_day];\n        }\n\n        console.log('update => pay_json: ', this.pay_json);\n    }\n\n    hasErrors = (fieldsError) => {\n        return Object.keys(fieldsError).some(field => fieldsError[field]);\n    }\n\n    addPartner = (e) => {\n        e.preventDefault();\n\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                if ( this.state.is_login && contract_account === this.state.login_account ) {\n                    let eos = this.scatter.eos(this.network, Eos, {});\n                    eos.contract(contract_account)\n                        .then(contract => {\n                            contract.addpart(\n                                values.partName,\n                                values.partRate,\n                                this.trx_option,\n                            )\n                            .then(res => {\n                                this.getPartners();\n                                Message.success('添加成功~');\n                            })\n                            .catch(err => {\n                                Message.error('添加失败!');\n                            });\n                        })\n                        .catch(err => {\n                            console.error(err);\n                        });\n                } else {\n                    Message.error(`请登录${contract_account}账号进行该操作！`);\n                }\n            }\n        });\n    }\n\n    updPartner = (newp) => {\n        if ( !this.state.is_login || contract_account !== this.state.login_account ) {\n            Message.error(`请登录${contract_account}账号进行该操作！`);\n            return;\n        }\n\n        if ( (newp.pid || newp.pid) >= 0 && (newp.rate || newp.rate) >= 0 && newp.partner &&\n             (this.partner_old.pid || this.partner_old.pid >= 0) && (this.partner_old.rate || this.partner_old.rate >= 0) && this.partner_old.partner ) {\n            if ( newp.pid === this.partner_old.pid ) {\n                if ( newp.rate !== this.partner_old.rate || newp.partner !== this.partner_old.partner ) {\n                    let _pid = newp.pid;\n                    let _newr = newp.rate, _newp = newp.partner;\n                    let _oldr = this.partner_old.rate, _oldp = this.partner_old.partner;\n\n                    let eos = this.scatter.eos(this.network, Eos, {});\n                    eos.contract(contract_account)\n                        .then(contract => {\n                            contract.updpart(\n                                _pid,\n                                _oldp, _newp,\n                                _oldr, _newr,\n                                this.trx_option,\n                            )\n                            .then(res => {\n                                this.getPartners();\n                                Message.success('更新成功~');\n                            })\n                            .catch(err => {\n                                Message.error('更新失败!');\n                            });\n                        })\n                        .catch(err => {\n                            console.error(err);\n                        });\n                } else {\n                    Message.info('没有需要更新的~');\n                }\n            } else {\n                Message.warning('请点击刚才修改那一行的更新！');\n            }\n        } else {\n            Message.warning('请先修改账号或返现率！');\n        }\n    }\n\n    pay = () => {\n        // console.log('pay_json: ', this.pay_json);\n        this.pay_memo = '';\n        let len = this.pay_json.length;\n\n        for ( let i = 0; i < len; i++ ) {\n            // console.log(`this.pay_json[${i}]: `, this.pay_json[i]);\n            if ( this.pay_json[i] && this.pay_json[i].length > 0 ) {\n                if ( this.pay_memo.length > 0 ) { this.pay_memo += ';'; }\n\n                this.pay_memo = this.pay_memo + i + ':' + this.pay_json[i].join(':');\n            }\n            // console.log(`${i} => pay_memo: `, this.pay_memo);\n        }\n        // console.log('pay_memo: ', this.pay_memo);\n\n        if ( this.pay_memo.length > 0 ) {\n            let eos = this.scatter.eos(this.network, Eos, {});\n            eos.contract(contract_account)\n                .then(contract => {\n                    contract.pay(\n                        this.pay_memo,\n                        this.trx_option,\n                    )\n                    .then(res => {\n                        this.pay_json = [];\n                        this.pay_memo = '';\n                        this.getPartners();\n                        Message.success('结算成功~');\n                    })\n                    .catch(err => {\n                        Message.error('结算失败！');\n                    });\n                })\n                .catch(err => {\n                    console.error(err);\n                });\n        } else {\n            Message.warning('请勾选要结算的项!');\n        }\n    }\n\n    getPartners = () => {\n        this.eosjs.getTableRows({\n            json: true,\n            code: contract_account,\n            scope: contract_account,\n            table: 'parts',\n            // limit: 30,\n        })\n        .then(data => {\n            if ( data.rows && data.rows.length > 0 ) {\n                this.setState({ partners: data.rows });\n                this.getRecords( data.rows, 0 );\n            }\n\n            this.setState({ loading_partners: false });\n        })\n        .catch(err => {\n            console.error(err);\n            this.setState({ loading_partners: false });\n        });\n    }\n\n    getRecords = ( parts, next=0 ) => {\n        this.eosjs.getTableRows({\n            json: true,\n            code: contract_account,\n            scope: parts[next].pid,\n            table: 'records',\n            // limit: 30,\n        })\n        .then(data => {\n            if ( next ) {\n                this.setState((prevState) => {\n                    let _records = prevState.records;\n                    _records.push(data.rows);\n                    return {records: _records}\n                });\n            } else {\n                let _records = [];\n                _records.push(data.rows);\n                this.setState({ records: _records });\n            }\n\n            if ( ++next < parts.length ) {\n                this.getRecords( parts, next );\n            } else {\n                this.setState({ loading_records: false });\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            this.setState({ loading_records: false });\n        });\n    }\n\n    accountLoginLogout = () => {\n        if ( null === this.scatter ) {\n            Message.info('请先安装或解锁Scatter');\n            return;\n        }\n\n        if ( this.state.is_login && this.scatter && this.scatter.identity ) {\n            // 进入这里是logout动作\n            this.scatter.forgetIdentity().then(() => {\n                this.setState({ is_login: false });\n                this.setState({ login_account: 'Login' });\n            });\n        } else if ( !this.state.is_login && this.scatter && !this.scatter.identity ) {\n            // 进入这里是login动作\n            this.scatter.getIdentity({ accounts: [this.network] }).then(() => {\n                const account = this.scatter.identity.accounts.find(account => account.blockchain === 'eos');\n                if ( account.name !== contract_account ) {\n                    Message.warning('该账号不是管理员账号');\n                }\n\n                this.trx_option = {authorization: [`${account.name}@${account.authority}`]};\n                this.setState({ login_account: account.name });\n                this.setState({ is_login: true });\n            });\n        }\n    }\n\n    switchNet = ( checked ) => {\n        if ( checked ) {\n            this.network = main_net;\n        } else {\n            this.network = kylin_net;\n        }\n\n        this.eosjs = Eos({\n            httpEndpoint: `${this.network.protocol}://${this.network.host}:${this.network.port}`,\n            chainId: this.network.chainId,\n        });\n\n        this.resetState();\n        this.getPartners();\n\n        if (this.scatter && this.scatter.identity) {\n            const account = this.scatter.identity.accounts.find(account => account.blockchain === 'eos');\n            if ( account.name !== contract_account ) {\n                Message.warning('该账号不是管理员账号');\n            }\n\n            this.trx_option = {authorization: [`${account.name}@${account.authority}`]};\n            this.setState({ login_account: account.name });\n            this.setState({ is_login: true });\n        }\n    }\n\n    handleSave = (row) => {\n        delete row.key;\n\n        let _partners = [...this.state.partners];\n        let index = _partners.findIndex(item => row.pid === item.pid);\n        let item = _partners[index];\n\n        if ( this.partner_old.pid || this.partner_old.pid >= 0 ) {\n            if ( this.partner_old.pid !== item.pid ) {\n                this.partner_old = item;\n            }\n        } else {\n            this.partner_old = item;\n        }\n\n        _partners.splice(index, 1, {\n            ...item,\n            ...row,\n        });\n        this.setState({ partners: _partners });\n    }\n\n    render() {\n        let data_parts = [];\n        let partners = this.state.partners;\n\n        for ( let i = 0; i < partners.length; i++ ) {\n            data_parts.push({\n                key: i,\n                pid: partners[i].pid,\n                partner: partners[i].partner,\n                rate: partners[i].rate,\n            });\n        }\n\n        const recordsRowRender = ( record ) => {\n            const columns = [{\n                title: '日期',\n                dataIndex: 'daytime',\n                key: 'daytime',\n                align: 'center',\n            }, {\n                title: '金额(EOS)',\n                dataIndex: 'quantity',\n                key: 'quantity',\n                align: 'center',\n            }];\n        \n            let data = [];\n            let pid = record.pid, records = this.state.records[pid];\n            for ( let i = 0; records && i < records.length; i++ ) {\n                data.push({\n                    key: i,\n                    pid: pid,\n                    day: records[i].day,\n                    daytime: new Date( records[i].day * 86400 * 1000 ).Format('yyyy/MM/dd'),\n                    quantity: records[i].quantity,\n                });\n            }\n        \n            return (\n                <Table\n                    columns={columns}\n                    dataSource={data}\n                    rowSelection={this.recordsSelection}\n                    pagination={false}\n                    loading={this.state.loading_records}\n                />\n            );\n        };\n\n        const {\n            getFieldDecorator, getFieldsError, getFieldError, isFieldTouched,\n        } = this.props.form;\n\n        const partNameError = isFieldTouched('partName') && getFieldError('partName');\n        const partRateError = isFieldTouched('partRate') && getFieldError('partRate');\n\n        const components = {\n            body: {\n              row: EditableFormRow,\n              cell: EditableCell,\n            },\n        };\n        const _columns_parts = this.columns_parts.map((col) => {\n            if (!col.editable) {\n                return col;\n            }\n\n            return {\n                ...col,\n                onCell: record => ({\n                    record,\n                    editable: col.editable,\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    handleSave: this.handleSave,\n                }),\n            }\n        });\n\n        return (\n            <div>\n                <Layout className='layout'>\n                    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                        <div className='header-box'>\n                            <Switch className='main-kylin' checkedChildren=\"主网\" unCheckedChildren=\"麒麟\" defaultChecked onChange={this.switchNet} />\n                            <a href='javascript:;' onClick={this.pay} className='pay'>\n                                {<span><Icon type='pay-circle'/> 结算</span>}\n                            </a>\n                            <a href='javascript:;' onClick={this.accountLoginLogout} className='login-logout'>\n                                {\n                                    this.state.is_login === true ?\n                                    <span><Icon type='user'/> {this.state.login_account}</span> :\n                                    <span><Icon type='login'/> {this.state.login_account}</span>\n                                }\n                            </a>\n                        </div>\n                    </Header>\n                    <Content>\n                        <div className='add-partner'>\n                            <Form layout=\"inline\" onSubmit={this.addPartner}>\n                                <FormItem\n                                    validateStatus={partNameError ? 'error' : ''}\n                                    help={partNameError || ''}\n                                >\n                                    {getFieldDecorator('partName', {\n                                        rules: [{ required: true, message: 'Please input a partner name!' }],\n                                    })(\n                                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"text\" placeholder=\"账号\" />\n                                    )}\n                                </FormItem>\n                                <FormItem\n                                    validateStatus={partRateError ? 'error' : ''}\n                                    help={partRateError || ''}\n                                >\n                                    {getFieldDecorator('partRate', {\n                                        rules: [{ required: true, message: 'Please input a return rate!' }],\n                                    })(\n                                        <Input prefix={<Icon type=\"calculator\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"number\" placeholder=\"返现率\" />\n                                    )}\n                                </FormItem>\n                                <FormItem>\n                                        <Button\n                                            type=\"primary\"\n                                            htmlType=\"submit\"\n                                            disabled={this.hasErrors(getFieldsError())}\n                                        >添加代理</Button>\n                                </FormItem>\n                            </Form>\n                        </div>\n                        <Table\n                            components={components}\n                            columns={_columns_parts}\n                            dataSource={data_parts}\n                            expandedRowRender={recordsRowRender}\n                            pagination={false}\n                            loading={this.state.loading_partners}\n                            style={{ width: '720px', margin: '30px auto' }}\n                        />\n                    </Content>\n                </Layout>\n            </div>\n        );\n    }\n\n    init = () => {\n        this.eosjs = Eos({\n            httpEndpoint: `${this.network.protocol}://${this.network.host}:${this.network.port}`,\n            chainId: this.network.chainId,\n        });\n\n        document.addEventListener('scatterLoaded', scatterExtension => {\n            this.scatter = window.scatter;\n            window.scatter = null;\n        });\n\n        this.getPartners();\n    }\n\n    componentDidMount() {\n        this.props.form.validateFields();\n        this.init();\n    }\n}\n\nexport default Form.create()(Trustbetinfo);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Trustbetinfo from './trustbetinfo/Trustbetinfo';\n\nconst isTrustbetinfo = true;\n\nclass App extends Component {\n  render() {\n    if ( isTrustbetinfo ) {\n      return (\n        <Trustbetinfo />\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}